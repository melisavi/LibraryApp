services:
  libraryauth:
    image: libraryauth
    build: ./library-auth
    ports:
      - 8081:8080
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  librarycore:
    image: librarycore
    build: ./library-core
    ports:
      - 8080:8080
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  postgres:
    image: postgres:16
    environment:
      POSTGRES_MULTIPLE_DATABASES: libraryauth, library
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
    volumes:
      - ./pg-init-script:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 5
